<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
    <div id ="app"></div>
    <script type="text/babel">

        const App=()=>{
            const isLoggedIn=true;
            return(
                <div> 
                    {isLoggedIn ?(<h1>Welcome back</h1>):(<h1> please Log in</h1>)}
                    {isLoggedIn &&<h2> you have a new notification</h2>}

                </div>
            );
        };
        const root=ReactDOM.createRoot(document.getElementById('app'))
        root.render(<App/>)
    </script>
    

    <!-- <div id="app"> </div>
    <script type="text/babel">
        const n=10;
        const m=<h1>React is {n*2} timesbetter than reactjs </h1>
        const root =ReactDOM.createRoot(document.getElementById('app'))
        root.render(m)
    </script> -->




    <!-- <div> id="app"</div>
    <script>
        const e =React.createElement(
            'h1' ,{id :'a'},"i am pavan"
        )
        const element=document.getElementById('app')
        const root=ReactDOM.createROOT(element)
        root.render(e)
    </script> -->


    <!-- <div id="root"></div>
    <h1>ria <br> sia</h1><hr>
    <script src="a.js">
        //link your javascript file here
    </script> -->

    <!-- <div id="app"></div>
    <script type="text/babel">
        const element=<h1 classname="a">Hello JSX!</h1>
        const e = document.getElementById('app')
        const root=ReactDOM.createRoot(e)
        root.render(element)
    </script> -->
</body>
</html>

theory notes :
React Js :
--create element :
React.createElement()
Syntax:
React.createElement()
Type =tag name ; (h ,p ,div)
Props = className ,id

---ReactDOM.createRoot();
--render

JSX :
Java script xml is a syntax extension for js
It allows us to write html code in react

The jsx code gets compiled into js 
Babel : A tool converts html code in js
---all the html tags must be closed

1.create a element by jsx

<div id="app"> </div>
    <script> type ="text/babel"
    const element =<h1 className="a">Hello,JSX! </h1>
    const e=document.getElementById('app')
    const root=ReactDOM.createRoot(e)
    root.render(element)
    </script>
 2.without jsx :

<div> id="app"</div>
    <script>
        const e =React.createElement(
            'h1' ,{id :'a'},"i am pavan"
        )
        const element=document.getElementById('app')
        const root=ReactDOM.createROOT(element)
        root.render(e)
    </scpt>
Conditional rendering :
ri

<div id ="app"></div>
    <script type="text/babel">

        const App=()=>{
            const isLoggedIn=true;
            return(
                <div> 
                    {isLoggedIn ?(<h1>Welcome back</h1>):(<h1> please Log in</h1>)}
                    {isLoggedIn &&<h2> you have a new notification</h2>}

                </div>
            );
        };
        const root=ReactDOM.createRoot(document.getElementById('app'))
        root.render(<App/>)
    </script>



